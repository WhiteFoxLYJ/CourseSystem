<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd" 
	xmlns:tx="http://www.springframework.org/schema/tx">
	<!-- 定义BasicDataSource数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<!-- 指定数据库所用的url -->
		<property name="url" value="jdbc:mysql://localhost:3306/user"></property>
		<!-- 指定连接数据库的用户名 -->
		<property name="username" value="root"></property>
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="root"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 将上面定义的数据源dataSource注入到LocalSessionFactoryBean类的sessionFactory属性 -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 设置Hiberante的相关属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 设置Hibernate的数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- 线程界别设置 -->
				<prop key="hibernate.current_session_context_class">
					thread
				</prop> 
				<prop key="hibernate.hbm2ddl.auto">
					update
				</prop> 
				<prop key="hibernate.show_sql">
					true
				</prop> 
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.lyj.entity.Course</value>
				<value>com.lyj.entity.SelectCourse</value>
				<value>com.lyj.entity.Room</value>
				<value>com.lyj.entity.Teacher</value>
				<value>com.lyj.entity.Eduadmin</value>
				<value>com.lyj.entity.CourseTeacher</value>
				<value>com.lyj.entity.Major</value>
				<value>com.lyj.entity.StudentCourse</value>
				<value>com.lyj.entity.Coursetime</value>
				<value>com.lyj.entity.Student</value>
				<value>com.lyj.entity.Classbj</value>
				</list>
		</property></bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- <aop:config>
	对com.lyj.biz包下面的所有类的所有方法都应用事务规则
		<aop:pointcut expression="execution(* com.lyj.biz.*.*(..))" id="bizMethods"/>
	将事务通知与切面结合	
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethods"/>
	</aop:config> -->
	
	<!-- Action的定义 -->
	<!-- <bean id="roomAction" class="com.lyj.action.RoomAction" scope="prototype">
		<property name="roomBiz" ref="roomBiz"></property>
	</bean> -->
	<!-- <bean id="courseAction" class="com.lyj.action.CourseAction" scope="prototype">
		<property name="courseBiz" ref="courseBiz"></property>
	</bean> -->
	<!-- <bean id="loginAction" class="com.lyj.action.LoginAction" scope="prototype">
		<property name="teacherBiz" ref="teacherBiz"></property>
		<property name="eduadminBiz" ref="eduadminBiz"></property>
		<property name="studentBiz" ref="studentBiz"></property>
	</bean> -->
	<!-- <bean id="coursePlanAction" class="com.lyj.action.CoursePlanAction" scope="prototype">
		<property name="roomBiz" ref="roomBiz"></property>
		<property name="teacherBiz" ref="teacherBiz"></property>
		<property name="courseBiz" ref="courseBiz"></property>
		<property name="coursetimeBiz" ref="coursetimeBiz"></property>
	</bean> -->
	
	<context:annotation-config/>
	<!-- 在Spring配置文件中开启Spring的Bean自动扫描几只来检查和管理Bean实例 -->
	<context:component-scan base-package="com.lyj"/>
	<tx:annotation-driven transaction-manager="transactionManager" /></beans>